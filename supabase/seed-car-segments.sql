-- Seed car segments with consistent slugs matching the admin form and public page
-- This ensures the segment dropdown in admin matches what's displayed on the public car rental page

-- Create car_segments table if it doesn't exist
CREATE TABLE IF NOT EXISTS car_segments (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  slug VARCHAR(100) NOT NULL UNIQUE,
  active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Add optional columns if they don't exist (graceful schema evolution)
DO $$ 
BEGIN
  BEGIN
    ALTER TABLE car_segments ADD COLUMN active BOOLEAN DEFAULT true;
  EXCEPTION
    WHEN duplicate_column THEN
      -- Column already exists, do nothing
  END;
  
  BEGIN
    ALTER TABLE car_segments ADD COLUMN name VARCHAR(100);
  EXCEPTION
    WHEN duplicate_column THEN
      -- Column already exists, do nothing
  END;
  
  BEGIN
    ALTER TABLE car_segments ADD COLUMN icon VARCHAR(100);
  EXCEPTION
    WHEN duplicate_column THEN
      -- Column already exists, do nothing
  END;
  
  BEGIN
    ALTER TABLE car_segments ADD COLUMN price_range_min INTEGER;
  EXCEPTION
    WHEN duplicate_column THEN
      -- Column already exists, do nothing
  END;
  
  BEGIN
    ALTER TABLE car_segments ADD COLUMN price_range_max INTEGER;
  EXCEPTION
    WHEN duplicate_column THEN
      -- Column already exists, do nothing
  END;
  
  BEGIN
    ALTER TABLE car_segments ADD COLUMN features JSONB DEFAULT '[]'::jsonb;
  EXCEPTION
    WHEN duplicate_column THEN
      -- Column already exists, do nothing
  END;
  
  BEGIN
    ALTER TABLE car_segments ADD COLUMN sort_order INTEGER DEFAULT 0;
  EXCEPTION
    WHEN duplicate_column THEN
      -- Column already exists, do nothing
  END;
END $$;

-- Insert base segments with only guaranteed columns first (slug only, let id auto-generate)
-- This avoids type conflicts between UUID and INTEGER id columns
INSERT INTO car_segments (slug) 
VALUES 
  ('economic'),
  ('mid-class'),
  ('comfort'),
  ('premium'),
  ('atv-jeep')
ON CONFLICT (slug) DO NOTHING;

-- Try to update with extended columns if they exist
DO $$
BEGIN
  -- Try to update with active column
  BEGIN
    UPDATE car_segments SET 
      active = true
    WHERE slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep');
  EXCEPTION
    WHEN undefined_column THEN
      -- active column doesn't exist, skip
  END;

  -- Try to update with name column
  BEGIN
    UPDATE car_segments SET 
      name = CASE slug
        WHEN 'economic' THEN 'Economic'
        WHEN 'mid-class' THEN 'Mid-Class'
        WHEN 'comfort' THEN 'Comfort'
        WHEN 'premium' THEN 'Premium'
        WHEN 'atv-jeep' THEN 'ATV JEEP'
      END
    WHERE slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep');
  EXCEPTION
    WHEN undefined_column THEN
      -- name column doesn't exist, skip
  END;

  -- Try to update with other optional columns
  BEGIN
    UPDATE car_segments SET 
      icon = CASE slug
        WHEN 'economic' THEN 'üí∞'
        WHEN 'mid-class' THEN 'üöó'
        WHEN 'comfort' THEN '‚ú®'
        WHEN 'premium' THEN 'üèéÔ∏è'
        WHEN 'atv-jeep' THEN 'üõª'
      END,
      price_range_min = CASE slug
        WHEN 'economic' THEN 20
        WHEN 'mid-class' THEN 40
        WHEN 'comfort' THEN 70
        WHEN 'premium' THEN 100
        WHEN 'atv-jeep' THEN 80
      END,
      price_range_max = CASE slug
        WHEN 'economic' THEN 50
        WHEN 'mid-class' THEN 80
        WHEN 'comfort' THEN 120
        WHEN 'premium' THEN 200
        WHEN 'atv-jeep' THEN 150
      END,
      sort_order = CASE slug
        WHEN 'economic' THEN 1
        WHEN 'mid-class' THEN 2
        WHEN 'comfort' THEN 3
        WHEN 'premium' THEN 4
        WHEN 'atv-jeep' THEN 5
      END
    WHERE slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep');
  EXCEPTION
    WHEN undefined_column THEN
      -- Optional columns don't exist, skip
  END;

  -- Try to update features if jsonb column exists
  BEGIN
    UPDATE car_segments SET 
      features = CASE slug
        WHEN 'economic' THEN '["fuel_efficient", "compact", "budget_friendly"]'::jsonb
        WHEN 'mid-class' THEN '["automatic_transmission", "gps", "bluetooth"]'::jsonb
        WHEN 'comfort' THEN '["comfort", "wide_body", "large_trunk"]'::jsonb
        WHEN 'premium' THEN '["leather_seats", "premium_sound", "sunroof"]'::jsonb
        WHEN 'atv-jeep' THEN '["4wd", "off_road", "adventure"]'::jsonb
      END
    WHERE slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep');
  EXCEPTION
    WHEN undefined_column THEN
      -- features column doesn't exist, skip
  END;
END $$;

-- Create car_segments_i18n table if it doesn't exist
CREATE TABLE IF NOT EXISTS car_segments_i18n (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  segment_id UUID REFERENCES car_segments(id) ON DELETE CASCADE,
  locale VARCHAR(5) NOT NULL CHECK (locale IN ('tr', 'en', 'ru', 'ar')),
  title VARCHAR(200) NOT NULL,
  slug VARCHAR(100) NOT NULL,
  summary TEXT,
  body TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  UNIQUE(segment_id, locale)
);

-- Insert Turkish translations
INSERT INTO car_segments_i18n (segment_id, locale, title, slug, summary, body) 
SELECT cs.id, 'tr', 
  CASE cs.slug
    WHEN 'economic' THEN 'Ekonomik'
    WHEN 'mid-class' THEN 'Orta Sƒ±nƒ±f'
    WHEN 'comfort' THEN 'Konforlu'
    WHEN 'premium' THEN 'Premium'
    WHEN 'atv-jeep' THEN 'ATV JEEP'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'ekonomik'
    WHEN 'mid-class' THEN 'orta-sinif'
    WHEN 'comfort' THEN 'konforlu'
    WHEN 'premium' THEN 'premium'
    WHEN 'atv-jeep' THEN 'atv-jeep'
  END,
  CASE cs.slug
    WHEN 'economic' THEN '≈ûehir i√ßi ve kƒ±sa seyahatler i√ßin en uygun fiyatlƒ± ara√ßlar'
    WHEN 'mid-class' THEN 'Konfor ve ekonomi dengesini sunan modeller'
    WHEN 'comfort' THEN '√úst d√ºzey konfor ve teknolojiye sahip ara√ßlar'
    WHEN 'premium' THEN 'L√ºks ve prestij segmenti'
    WHEN 'atv-jeep' THEN 'Macera ve off-road deneyimi i√ßin ATV ve Jeep'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'Yakƒ±t tasarruflu ve kompakt ara√ßlar'
    WHEN 'mid-class' THEN 'Otomatik vites, GPS ve Bluetooth √∂zellikli ara√ßlar'
    WHEN 'comfort' THEN 'Geni≈ü bagaj ve konfor √∂zellikleri'
    WHEN 'premium' THEN 'Deri koltuk, premium ses sistemi ve sunroof'
    WHEN 'atv-jeep' THEN '4x4 ve off-road macera ara√ßlarƒ±'
  END
FROM car_segments cs
WHERE cs.slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep')
ON CONFLICT (segment_id, locale) DO UPDATE SET
  title = EXCLUDED.title,
  slug = EXCLUDED.slug,
  summary = EXCLUDED.summary,
  body = EXCLUDED.body;

-- Insert English translations
INSERT INTO car_segments_i18n (segment_id, locale, title, slug, summary, body) 
SELECT cs.id, 'en', 
  CASE cs.slug
    WHEN 'economic' THEN 'Economic'
    WHEN 'mid-class' THEN 'Mid-Class'
    WHEN 'comfort' THEN 'Comfort'
    WHEN 'premium' THEN 'Premium'
    WHEN 'atv-jeep' THEN 'ATV JEEP'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'economic'
    WHEN 'mid-class' THEN 'mid-class'
    WHEN 'comfort' THEN 'comfort'
    WHEN 'premium' THEN 'premium'
    WHEN 'atv-jeep' THEN 'atv-jeep'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'Most affordable cars for city and short trips'
    WHEN 'mid-class' THEN 'Balance of comfort and economy'
    WHEN 'comfort' THEN 'High-level comfort and technology'
    WHEN 'premium' THEN 'Luxury and prestige segment'
    WHEN 'atv-jeep' THEN 'Adventure and off-road experience'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'Fuel-efficient and compact vehicles'
    WHEN 'mid-class' THEN 'Cars with automatic transmission, GPS and Bluetooth'
    WHEN 'comfort' THEN 'Spacious with comfort features'
    WHEN 'premium' THEN 'Leather seats, premium sound system and sunroof'
    WHEN 'atv-jeep' THEN '4x4 and off-road adventure vehicles'
  END
FROM car_segments cs
WHERE cs.slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep')
ON CONFLICT (segment_id, locale) DO UPDATE SET
  title = EXCLUDED.title,
  slug = EXCLUDED.slug,
  summary = EXCLUDED.summary,
  body = EXCLUDED.body;

-- Insert Russian translations
INSERT INTO car_segments_i18n (segment_id, locale, title, slug, summary, body) 
SELECT cs.id, 'ru', 
  CASE cs.slug
    WHEN 'economic' THEN '–≠–∫–æ–Ω–æ–º'
    WHEN 'mid-class' THEN '–°—Ä–µ–¥–Ω–∏–π –∫–ª–∞—Å—Å'
    WHEN 'comfort' THEN '–ö–æ–º—Ñ–æ—Ä—Ç'
    WHEN 'premium' THEN '–ü—Ä–µ–º–∏—É–º'
    WHEN 'atv-jeep' THEN 'ATV JEEP'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'econom'
    WHEN 'mid-class' THEN 'sredniy-klass'
    WHEN 'comfort' THEN 'komfort'
    WHEN 'premium' THEN 'premium'
    WHEN 'atv-jeep' THEN 'atv-jeep'
  END,
  CASE cs.slug
    WHEN 'economic' THEN '–°–∞–º—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –¥–ª—è –≥–æ—Ä–æ–¥–∞ –∏ –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø–æ–µ–∑–¥–æ–∫'
    WHEN 'mid-class' THEN '–ë–∞–ª–∞–Ω—Å –∫–æ–º—Ñ–æ—Ä—Ç–∞ –∏ —ç–∫–æ–Ω–æ–º–∏–∏'
    WHEN 'comfort' THEN '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∫–æ–º—Ñ–æ—Ä—Ç–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π'
    WHEN 'premium' THEN '–°–µ–≥–º–µ–Ω—Ç —Ä–æ—Å–∫–æ—à–∏ –∏ –ø—Ä–µ—Å—Ç–∏–∂–∞'
    WHEN 'atv-jeep' THEN '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –∏ –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω—ã–π –æ–ø—ã—Ç'
  END,
  CASE cs.slug
    WHEN 'economic' THEN '–¢–æ–ø–ª–∏–≤–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–µ –∏ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏'
    WHEN 'mid-class' THEN '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–æ—Ä–æ–±–∫–æ–π –ø–µ—Ä–µ–¥–∞—á, GPS –∏ Bluetooth'
    WHEN 'comfort' THEN '–ü—Ä–æ—Å—Ç–æ—Ä–Ω—ã–µ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∫–æ–º—Ñ–æ—Ä—Ç–∞'
    WHEN 'premium' THEN '–ö–æ–∂–∞–Ω—ã–µ —Å–∏–¥–µ–Ω—å—è, –ø—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –∞—É–¥–∏–æ—Å–∏—Å—Ç–µ–º–∞ –∏ –ª—é–∫'
    WHEN 'atv-jeep' THEN '–ü–æ–ª–Ω–æ–ø—Ä–∏–≤–æ–¥–Ω—ã–µ –∏ –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏'
  END
FROM car_segments cs
WHERE cs.slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep')
ON CONFLICT (segment_id, locale) DO UPDATE SET
  title = EXCLUDED.title,
  slug = EXCLUDED.slug,
  summary = EXCLUDED.summary,
  body = EXCLUDED.body;

-- Insert Arabic translations
INSERT INTO car_segments_i18n (segment_id, locale, title, slug, summary, body) 
SELECT cs.id, 'ar', 
  CASE cs.slug
    WHEN 'economic' THEN 'ÿßŸÇÿ™ÿµÿßÿØŸä'
    WHEN 'mid-class' THEN 'ÿßŸÑŸÅÿ¶ÿ© ÿßŸÑŸÖÿ™Ÿàÿ≥ÿ∑ÿ©'
    WHEN 'comfort' THEN 'ÿ±ÿßÿ≠ÿ©'
    WHEN 'premium' THEN 'ÿ®ÿ±ŸäŸÖŸäŸàŸÖ'
    WHEN 'atv-jeep' THEN 'ATV JEEP'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'iqtisadi'
    WHEN 'mid-class' THEN 'alfiat-almutawasita'
    WHEN 'comfort' THEN 'raha'
    WHEN 'premium' THEN 'premium'
    WHEN 'atv-jeep' THEN 'atv-jeep'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'ÿßŸÑÿ≥Ÿäÿßÿ±ÿßÿ™ ÿßŸÑÿ£ŸÉÿ´ÿ± ÿ®ÿ£ÿ≥ÿπÿßÿ± ŸÖÿπŸÇŸàŸÑÿ© ŸÑŸÑŸÖÿØŸäŸÜÿ© ŸàÿßŸÑÿ±ÿ≠ŸÑÿßÿ™ ÿßŸÑŸÇÿµŸäÿ±ÿ©'
    WHEN 'mid-class' THEN 'ÿ™Ÿàÿßÿ≤ŸÜ ÿßŸÑÿ±ÿßÿ≠ÿ© ŸàÿßŸÑÿßŸÇÿ™ÿµÿßÿØ'
    WHEN 'comfort' THEN 'ŸÖÿ≥ÿ™ŸàŸâ ÿπÿßŸÑŸç ŸÖŸÜ ÿßŸÑÿ±ÿßÿ≠ÿ© ŸàÿßŸÑÿ™ŸÉŸÜŸàŸÑŸàÿ¨Ÿäÿß'
    WHEN 'premium' THEN 'ŸÇÿ∑ÿßÿπ ÿßŸÑŸÅÿÆÿßŸÖÿ© ŸàÿßŸÑŸÖŸÉÿßŸÜÿ©'
    WHEN 'atv-jeep' THEN 'ŸÖÿ∫ÿßŸÖÿ±ÿ© Ÿàÿ™ÿ¨ÿ±ÿ®ÿ© ÿßŸÑÿ∑ÿ±ŸÇ ÿßŸÑŸàÿπÿ±ÿ©'
  END,
  CASE cs.slug
    WHEN 'economic' THEN 'ŸÖÿ±ŸÉÿ®ÿßÿ™ ŸÖŸàŸÅÿ±ÿ© ŸÑŸÑŸàŸÇŸàÿØ ŸàŸÖÿØŸÖÿ¨ÿ©'
    WHEN 'mid-class' THEN 'ÿ≥Ÿäÿßÿ±ÿßÿ™ ÿ®ŸÜÿßŸÇŸÑ ÿ≠ÿ±ŸÉÿ© ÿ£Ÿàÿ™ŸàŸÖÿßÿ™ŸäŸÉŸä Ÿà GPS Ÿà Bluetooth'
    WHEN 'comfort' THEN 'Ÿàÿßÿ≥ÿπ ŸÖÿπ ŸÖŸäÿ≤ÿßÿ™ ÿßŸÑÿ±ÿßÿ≠ÿ©'
    WHEN 'premium' THEN 'ŸÖŸÇÿßÿπÿØ ÿ¨ŸÑÿØŸäÿ© ŸàŸÜÿ∏ÿßŸÖ ÿµŸàÿ™Ÿä ŸÖÿ™ŸÖŸäÿ≤ ŸàŸÅÿ™ÿ≠ÿ© ÿ≥ŸÇŸÅ'
    WHEN 'atv-jeep' THEN 'ŸÖÿ±ŸÉÿ®ÿßÿ™ ÿØŸÅÿπ ÿ±ÿ®ÿßÿπŸä Ÿàÿ∑ÿ±ŸÇ Ÿàÿπÿ±ÿ©'
  END
FROM car_segments cs
WHERE cs.slug IN ('economic', 'mid-class', 'comfort', 'premium', 'atv-jeep')
ON CONFLICT (segment_id, locale) DO UPDATE SET
  title = EXCLUDED.title,
  slug = EXCLUDED.slug,
  summary = EXCLUDED.summary,
  body = EXCLUDED.body;